- @angular_form = true

%form.form-horizontal#form_div{"name"          => "angularForm",
                               "ng-controller" => "tenantFormController as vm",
                               "miq-form"      => "true",
                               "model-copy"    => 'vm.modelCopy',
                               "model"         => 'vm.tenantModel',
                               'form-changed'  => true,
                               "ng-show"       => "vm.afterGet"}
  = render :partial => "layouts/flash_msg"
  %div
    %div
      .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
        %label.col-md-2.control-label{"for" => "tenant_name"}
          = _("Name")
        .col-md-8
          %input.form-control{"type"        => "text",
                              "id"          => "tenant_name",
                              "name"        => "name",
                              "ng-model"    => "vm.tenantModel.name",
                              "ng-disabled" => "vm.tenantModel.default && vm.tenantModel.use_config_for_attributes",
                              "maxlength"   => "#{MAX_NAME_LEN}",
                              "miqrequired" => ""}
          %span.help-block{"ng-show" => "angularForm.name.$error.miqrequired"}
            = _("Required")
      .form-group{"ng-class" => "{'has-error': angularForm.description.$invalid}"}
        %label.col-md-2.control-label{"for" => "tenant_description"}
          = _("Description")
        .col-md-8
          %input.form-control{"type"        => "text",
                              "id"          => "tenant_description",
                              "name"        => "description",
                              "ng-model"    => "vm.tenantModel.description",
                              "maxlength"   => "#{ViewHelper::MAX_DESC_LEN}",
                              "miqrequired" => ""}
            %span.help-block{"ng-show" => "angularForm.description.$error.miqrequired"}
              = _("Required")
      .form-group{"ng-show" => "vm.tenantModel.default"}
        %label.col-md-2.control-label
          = _("Use Configuration Settings")
        .col-md-10
          %input#use_config{"bs-switch"       => "",
                            "type"            => "checkbox",
                            "name"            => "use_config_for_attributes",
                            "ng-model"        => "vm.tenantModel.use_config_for_attributes",
                            "switch-on-text"  => "Yes",
                            "switch-off-text" => "No"}
      %input{"type" => "hidden", "name" => "divisible", "value" => "{{vm.tenantModel.divisible}}"}
  = render :partial => "layouts/angular/generic_form_buttons"

:javascript
  ManageIQ.angular.app.value('tenantFormId', '#{@tenant.id || "new"}');
  ManageIQ.angular.app.value('tenantType', '#{@tenant_type}');
  miq_bootstrap('#form_div');
