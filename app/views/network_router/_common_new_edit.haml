%h3
  = _('Basic Information')
.form-horizontal
  .form-group{"ng-class" => "{'has-error': vm.angularForm.name.$invalid}"}
    %label.col-md-2.control-label
      = _('Router Name')
    .col-md-8
      %input.form-control{:type          => "text",
                          :name          => "name",
                          "ng-model"     => "vm.networkRouterModel.name",
                          "ng-maxlength" => 128,
                          "required"     => ""}
      %span.help-block{"ng-show" => "vm.angularForm.name.$error.required"}
        = _("Required")
%h3
  = _('External Gateway')
.form-horizontal
  .form-group
    %label.col-md-2.control-label{"for" => "network_router_enable_snat"}
    .col-md-8
      %input{"bs-switch"   => "",
             :data         => {:on_text => _('Yes'), :off_text => _('No'), :size => 'mini'},
             "type"        => "checkbox",
             "id"          => "network_router_external_gateway",
             "name"        => "external_gateway",
             "ng-model"    => "vm.networkRouterModel.external_gateway"}

.form-horizontal{"ng-if" => "vm.networkRouterModel.external_gateway"}
  .form-group{"ng-if" => "vm.networkRouterModel.ems_id"}
    %label.col-md-2.control-label{"for" => "network_router_enable_snat"}
      = _('Enable Source NAT')
    .col-md-8
      %input{"bs-switch"   => "",
             :data         => {:on_text => _('Yes'), :off_text => _('No'), :size => 'mini'},
             "type"        => "checkbox",
             "id"          => "network_router_enable_snat",
             "name"        => "enable_snat",
             "ng-model"    => "vm.networkRouterModel.enable_snat"}

  .form-group{"ng-class" => "{'has-error': vm.angularForm.cloud_network_id.$invalid}"}
    %label.col-md-2.control-label
      = _('Network')
    .col-md-8
      %select{"name"                        => "cloud_network_id",
              "ng-model"                    => "vm.networkRouterModel.cloud_network_id",
              "ng-options"                  => "network.id as network.name for network in vm.available_networks",
              "ng-change"                   => "vm.filterCloudNetworkChanged(vm.networkRouterModel.cloud_network_id)",
              "pf-select"                   => true,
              "ng-selected"                 => "vm.networkRouterModel.cloud_network_id",
              "ng-required"                 => "vm.networkRouterModel.enable_snat == true",
              "selectpicker-for-select-tag" => ""}
        %option{"value" => ""}
          = "<#{_('Choose')}>"
      %span.help-block{"ng-show" => "vm.angularForm.cloud_network_id.$error.required"}
        = _("Required")

  %h2
  .form-horizontal{"ng-if" => "vm.networkRouterModel.cloud_network_id"}
    = _('Fixed IPs')
    .form-group
      %label.col-md-2.control-label
        = _('Subnet')
      .col-md-8
        %select{"name"                        => "cloud_subnet_id",
                "ng-model"                    => "vm.networkRouterModel.cloud_subnet_id",
                "ng-options"                  => "subnet.id as subnet.name for subnet in vm.available_subnets",
                "pf-select"                   => true,
                "ng-selected"                 => "vm.networkRouterModel.cloud_subnet_id",
                "selectpicker-for-select-tag" => ""}
          %option{"value" => ""}
            = "<#{_('Choose')}>"
